(define (name) "Brandon Horner")

(define (op? x)
  (cond ((and (symbol? x)(eq? x 'add)))
        ((and (symbol? x)(eq? x 'sub)))
        ((and (symbol? x)(eq? x 'mul)))
        (else #f))
)


(define (reserved? x)
  (cond ((and (symbol? x)(eq? x 'if)))
        ((and (symbol? x)(eq? x 'then)))
        ((and (symbol? x)(eq? x 'else)))
        ((and (symbol? x)(eq? x 'skip)))
        ((and (symbol? x)(eq? x 'while)))
        ((and (symbol? x)(eq? x 'do))) 
        ((and (symbol? x)(eq? x 'true)))
        ((and (symbol? x)(eq? x 'false)))
        (else #f)
   )
)

(define (variable? x)
  (cond ((and
           (and (not(op? x)) (not(reserved? x)))
           (and (symbol? x) (char-alphabetic? (string-ref (symbol->string x) 0)))
           ))
        (else #f)
        )
)

(define (constant? x)
  (cond ((and (not (char? x)) (not(string? x)) (not(variable? x))))
        (else #f)
        )
  )

(define (get_op x)
  (cond ((and (symbol? x) (eq? x 'add)) +)
        ((and (symbol? x) (eq? x 'sub)) -)
        ((and (symbol? x) (eq? x 'mul)) *)
    )
  )